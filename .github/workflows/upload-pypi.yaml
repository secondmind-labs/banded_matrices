# Copyright 2021 The banded_matrices Contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Upload-PyPI



on:
  push:
    tags:
      - "v*.*.*"

jobs:
  check-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8.12", "3.9.12", "3.10.4"]
        poetry-version: [1.1.12]
    name: Python-${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup pip/poetry
        run: |
          pip install -U pip poetry twine
          poetry config virtualenvs.create false

      - name: Install Python dependencies
        run: poetry install

      - name: Configure environment variables for CMake
        run: |
          echo "PYTHON_BIN=$(which python)" >> $GITHUB_ENV


      - name: Install building tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake g++-14

      - name: Configure and Build C++ Library
        run: |
          mkdir -p banded_matrices/build
          cd banded_matrices/build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make

      - name: Install package
        run: poetry install

      - name: Set environment variables for tests
        run: |
          echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/banded_matrices/build/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Run tests
        run: poetry run task test

  pypi:
    # needs: check-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8.12", "3.9.12", "3.10.4"]
        poetry-version: [1.1.12]
    name: Release PyPi package
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # ------------ check version matches tag
      - name: Verify git tag vs. VERSION
        run: |
          VERSION="v$(cat VERSION | tr -d '\t\r\n ')"
          TAG="${GITHUB_REF/refs\/tags\//}"
          if [ "$VERSION" != "$TAG" ]; then
            echo "The package version ($VERSION) and the latest tag version ($TAG) are different"
            exit 1
          fi

      - name: Setup pip/poetry
        run: |
          pip install -U pip poetry twine
          poetry config virtualenvs.create false

      - name: Install Python dependencies
        run: poetry install

      - name: Configure environment variables for CMake
        run: |
          echo "PYTHON_BIN=$(which python)" >> $GITHUB_ENV


      - name: Install building tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake g++-14

      - name: Configure and Build C++ Library
        run: |
          mkdir -p banded_matrices/build
          cd banded_matrices/build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make

      - name: Install package
        run: |
          poetry install
          poetry build
        

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
