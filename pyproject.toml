[tool.poetry]
name = "banded_matrices"
version = "0.1.0"
description = "Native (C++) implementation of Banded Matrices for TensorFlow"
readme = "README.md"
repository = "https://github.com/secondmind-labs/banded_matrices"
license = "Apache-2.0"
keywords = ["banded matrices", "linear algebra"]
authors = ["Banded matrices contributors <labs@secondmind.ai>"]
packages = [{include = "banded_matrices"}]
classifiers=[
        "License :: OSI Approved :: Apache Software License",
        "Programming Language :: Python :: 3.6",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Operating System :: OS Independent",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
include = ["LICENSE", "dummy.c"]
build = "build.py"

[tool.poetry.dependencies]
cmake = ">=3.18.0,<3.19.0"
importlib-metadata = ">=4.4,<5.0"
numpy = ">=1.18.0,<2.0.0"
python = ">=3.7,<3.12"

tensorflow = [
    { version = ">=2.4.0,<2.7.0", markers = "python_version >= '3.7' and python_version < '3.8'" },     
    { version = ">=2.4.0,<2.7.0", markers = "python_version >= '3.8' and python_version < '3.9'" },
    { version = ">=2.5.0,<2.7.0", markers = "python_version >= '3.9' and python_version < '3.10'" },
    { version = ">=2.7.0,<2.9.0", markers = "python_version >= '3.10' and python_version < '3.11'" },
    { version = ">=2.8.0,<2.16.0", markers = "python_version >= '3.11' and python_version < '3.12'" }
]
# tensorflow = ">=2.8.0,<2.9.0"

[tool.poetry.dev-dependencies]
cpplint = "^1.5.3"
mock = "^4.0.2"
black = "22.3.0"
mypy = [
    { version = ">=1.1.0,<1.3.0", markers = "python_version >= '3.7' and python_version < '3.9'" },
    { version = ">=1.1.0,<1.3.0", markers = "python_version >= '3.9' and python_version < '3.10'" },
    { version = ">=1.1.0,<1.3.0", markers = "python_version >= '3.10' and python_version < '3.11'" },
    { version = "1.8.0", markers = "python_version >= '3.11' and python_version < '3.12'" }
]
# mypy = "1.8.0"
pylint = "2.3.1"
pytest = "6.2.5"
pytest-benchmark = "^3.2.3"
pytest-black = ">=0.3.8"
pytest-cov = "^2.8.1"
pytest-isort = "^1.0.0"
pytest-mock = "^3.1.1"
pytest-mypy = "^0.6.1"
pytest-pylint = "^0.17.0"
scipy = "^1.5.4"
taskipy = "^1.2.0"


[tool.pytest.ini_options]
addopts = "--ignore=banded_matrices/banded.py"
filterwarnings = [
    "ignore:`np.bool8` is a deprecated alias for `np.bool_`.*:DeprecationWarning"
]



[tool.taskipy.tasks]
lint = "pytest --pylint --cache-clear -m pylint -v && pytest --pylint --cache-clear -m pylint --pylint-rcfile=extrapylint"
mypy = "pytest --mypy --cache-clear -m mypy -v"
quicktest = "pytest -x --ff -rN -Wignore"
cpplint = "cpplint --output=junit --root=banded_matrices/cc banded_matrices/cc/src/banded_matrices/*.cc banded_matrices/cc/include/banded_matrices/*.hpp"
test = "pytest --pylint --mypy --black --isort --cache-clear -ra -v --cov banded_matrices --cov-report term --cov-report html:cover_html --junitxml=reports/junit.xml -o junit_family=xunit2 && pytest --pylint --cache-clear -m pylint --pylint-rcfile=extrapylint"
black = "black ."
isort = "isort --atomic -y"
format = "task isort && task black"
check_format = "pytest -v --cache-clear --black --isort -m 'black or isort'"

[tool.black]
line-length = 95
target-version = ['py37']

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
line_length = 95



[build-system]
requires = ["poetry>=0.12", "cmake", "setuptools"] #, "tensorflow>=2.8.0,<2.9.0", "cmake"]
build-backend = "poetry.masonry.api"
flags = ["-DCMAKE_CXX_STANDARD=14"]
